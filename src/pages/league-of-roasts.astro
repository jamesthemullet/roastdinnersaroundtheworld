---
import BaseLayout from "../layouts/BaseLayout.astro";
import "./league-of-roasts.css";
import "./../layouts/layout.css";
import { Image } from "astro:assets";
import console from "console";
import SortPosts from "../components/sortPosts";

const response = await fetch(
  "https://www.roastdinnersaroundtheworld.com/wp-json/wp/v2/posts"
);

const totalPosts = response.headers.get("X-WP-Total");

console.log(`Total number of posts: ${totalPosts}`);

const fetchPostsAndCurrency = async () => {
  const postsResponse = fetch(
    "https://www.roastdinnersaroundtheworld.com/graphql",
    {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        query: `
          query AllSlugs {
            posts {
              nodes {
                slug
                title
                customfields {
                  rating
                  currency
                  price
                  meat
                  country
                  yearVisited
                }
              }
            }
          }
        `,
      }),
    }
  );

  const currencyResponse = fetch(
    "https://api.exchangerate-api.com/v4/latest/GBP"
  );

  const [postsData, currencyData] = await Promise.all([
    postsResponse,
    currencyResponse,
  ]);

  const postsJson = await postsData.json();
  const currencyJson = await currencyData.json();

  const posts = postsJson.data.posts.nodes;
  const currencyRates = currencyJson.rates;

  const postsWithConvertedPrices = posts.map((post) => {
    const { currency, price } = post.customfields;
    const convertedPrice = currencyRates[currency]
      ? price / currencyRates[currency]
      : price;

    return {
      ...post,
      customfields: {
        ...post.customfields,
        convertedPrice,
      },
    };
  });

  return postsWithConvertedPrices;
};

const posts = await fetchPostsAndCurrency();

const singleResponse = await fetch(
  "https://www.roastdinnersaroundtheworld.com/graphql",
  {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: `
        query SinglePost($id: ID = "205") {
          page(idType: DATABASE_ID, id: $id) {
            date
            content
            title
            featuredImage {
              node {
                sourceUrl
              }
            }
          }
        }
        `,
    }),
  }
);

const { data: singleResponseData } = await singleResponse.json();

const singlePost = singleResponseData.page;
---

<BaseLayout pageTitle="League Of Roasts Around The World">
  <Image
    src={singlePost.featuredImage?.node.sourceUrl}
    alt={singlePost.title}
    width={2000}
    height={2000}
    class="featured-image"
  />
  <div class="container">
    <h2>League Of Roasts:</h2>
    <SortPosts posts={posts} client:load />
  </div>
</BaseLayout>
