---
import { Image } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";
import "./index.css";

const recentPostQuery = `
  query GetMostRecentPost {
    posts(first: 1) {
      nodes {
        id
        slug
        title
        date
        featuredImage {
          node {
            mediaDetails {
              sizes {
                sourceUrl
                name
              }
            }
          }
        }
      }
      pageInfo {
        endCursor
      }
    }
  }
`;

const otherPostsQuery = `
  query GetOtherPosts($after: String) {
    posts(first: 13, after: $after) {
      nodes {
        id
        slug
        title
        date
        featuredImage {
          node {
            mediaDetails {
              sizes {
                sourceUrl
                name
              }
            }
          }
        }
      }
    }
  }
`;

const recentPostResponse = await fetch(
  "https://blog.roastdinnersaroundtheworld.com/graphql",
  {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ query: recentPostQuery }),
  }
);

const recentPostData = await recentPostResponse.json();
const recentPost = recentPostData.data.posts.nodes[0];
recentPost.featured_image =
  recentPost.featuredImage.node.mediaDetails.sizes.find(
    (size) => size.name === "medium_large"
  ).sourceUrl;
const recentPostCursor = recentPostData.data.posts.pageInfo.endCursor;

const otherPostsResponse = await fetch(
  "https://blog.roastdinnersaroundtheworld.com/graphql",
  {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: otherPostsQuery,
      variables: { after: recentPostCursor },
    }),
  }
);

const otherPostsData = await otherPostsResponse.json();
const otherPosts = otherPostsData.data.posts.nodes.map((post) => ({
  ...post,
  featured_image: post.featuredImage.node.mediaDetails.sizes.find(
    (size) => size.name === "medium_large"
  ).sourceUrl,
}));

const posts = [recentPost, ...otherPosts];
---

<BaseLayout pageTitle="Home">
  <h2>Latest Reviews:</h2>
  <ul>
    {
      posts.map((post, index) => (
        <li>
          <h3>
            <a href={post.slug} rel="noopener noreferrer">
              <Fragment set:html={post.title} />
            </a>
          </h3>
          <a href={post.slug} rel="noopener noreferrer">
            <Image
              src={post.featured_image}
              alt={`Photo of the roast dinner at ${post.title}`}
              width={768}
              height={576}
              loading={index === 0 ? "eager" : "lazy"}
            />
          </a>
        </li>
      ))
    }
  </ul>
</BaseLayout>
